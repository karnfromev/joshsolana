{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\Webstrome\\\\my-app\\\\src\\\\WalletMulti.tsx\",\n    _s = $RefreshSig$();\n\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Button } from '@solana/wallet-adapter-react-ui/src/Button';\nimport { useWalletModal } from '@solana/wallet-adapter-react-ui/src/useWalletModal';\nimport { WalletConnectButton } from '@solana/wallet-adapter-react-ui/src/WalletConnectButton';\nimport { WalletIcon } from '@solana/wallet-adapter-react-ui/src/WalletIcon';\nimport { WalletModalButton } from '@solana/wallet-adapter-react-ui/src/WalletModalButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WalletMulti = ({\n  children,\n  ...props\n}) => {\n  _s();\n\n  const {\n    publicKey,\n    wallet,\n    disconnect\n  } = useWallet();\n  const {\n    setVisible\n  } = useWalletModal();\n  const [copied, setCopied] = useState(false);\n  const [active, setActive] = useState(false);\n  const ref = useRef(null);\n  const base58 = useMemo(() => publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58(), [publicKey]);\n  const content = useMemo(() => {\n    if (children) return children;\n    if (!wallet || !base58) return null;\n    return base58.slice(0, 4) + '..' + base58.slice(-4);\n  }, [children, wallet, base58]);\n  const copyAddress = useCallback(async () => {\n    if (base58) {\n      await navigator.clipboard.writeText(base58);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 400);\n    }\n  }, [base58]);\n  const openDropdown = useCallback(() => setActive(true), [setActive]);\n  const closeDropdown = useCallback(() => setActive(false), [setActive]);\n  const openModal = useCallback(() => {\n    setVisible(true);\n    closeDropdown();\n  }, [setVisible, closeDropdown]);\n  useEffect(() => {\n    const listener = event => {\n      const node = ref.current; // Do nothing if clicking dropdown or its descendants\n\n      if (!node || node.contains(event.target)) return;\n      closeDropdown();\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, closeDropdown]);\n  if (!wallet) return /*#__PURE__*/_jsxDEV(WalletModalButton, { ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 25\n  }, this);\n  if (!base58) return /*#__PURE__*/_jsxDEV(WalletConnectButton, { ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-adapter-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      \"aria-expanded\": active,\n      className: \"wallet-adapter-button-trigger\",\n      style: {\n        pointerEvents: active ? 'none' : 'auto',\n        ...props.style\n      },\n      onClick: openDropdown,\n      startIcon: /*#__PURE__*/_jsxDEV(WalletIcon, {\n        wallet: wallet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 28\n      }, this),\n      ...props,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      \"aria-label\": \"dropdown-list\",\n      className: `wallet-adapter-dropdown-list ${active && 'wallet-adapter-dropdown-list-active'}`,\n      ref: ref,\n      role: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: copyAddress,\n        className: \"wallet-adapter-dropdown-list-item\",\n        role: \"menuitem\",\n        children: copied ? 'Copied' : 'Copy address'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: openModal,\n        className: \"wallet-adapter-dropdown-list-item\",\n        role: \"menuitem\",\n        children: \"Connect a different wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: disconnect,\n        className: \"wallet-adapter-dropdown-list-item\",\n        role: \"menuitem\",\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WalletMulti, \"4Imuub7+cVRmX/jYnPi0Y3cPfr8=\", false, function () {\n  return [useWallet, useWalletModal];\n});\n\n_c = WalletMulti;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletMulti\");","map":{"version":3,"sources":["D:/workspace/Webstrome/my-app/src/WalletMulti.tsx"],"names":["useWallet","React","useCallback","useEffect","useMemo","useRef","useState","Button","useWalletModal","WalletConnectButton","WalletIcon","WalletModalButton","WalletMulti","children","props","publicKey","wallet","disconnect","setVisible","copied","setCopied","active","setActive","ref","base58","toBase58","content","slice","copyAddress","navigator","clipboard","writeText","setTimeout","openDropdown","closeDropdown","openModal","listener","event","node","current","contains","target","document","addEventListener","removeEventListener","pointerEvents","style"],"mappings":"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","sourcesContent":["import { useWallet } from '@solana/wallet-adapter-react';\r\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { Button, ButtonProps } from '@solana/wallet-adapter-react-ui/src/Button';\r\nimport { useWalletModal } from '@solana/wallet-adapter-react-ui/src/useWalletModal';\r\nimport { WalletConnectButton } from '@solana/wallet-adapter-react-ui/src/WalletConnectButton';\r\nimport { WalletIcon } from '@solana/wallet-adapter-react-ui/src/WalletIcon';\r\nimport { WalletModalButton } from '@solana/wallet-adapter-react-ui/src/WalletModalButton';\r\n\r\nexport const WalletMulti: FC<ButtonProps> = ({ children, ...props }) => {\r\n    const { publicKey, wallet, disconnect } = useWallet();\r\n    const { setVisible } = useWalletModal();\r\n    const [copied, setCopied] = useState(false);\r\n    const [active, setActive] = useState(false);\r\n    const ref = useRef<HTMLUListElement>(null);\r\n\r\n    const base58 = useMemo(() => publicKey?.toBase58(), [publicKey]);\r\n    const content = useMemo(() => {\r\n        if (children) return children;\r\n        if (!wallet || !base58) return null;\r\n        return base58.slice(0, 4) + '..' + base58.slice(-4);\r\n    }, [children, wallet, base58]);\r\n\r\n    const copyAddress = useCallback(async () => {\r\n        if (base58) {\r\n            await navigator.clipboard.writeText(base58);\r\n            setCopied(true);\r\n            setTimeout(() => setCopied(false), 400);\r\n        }\r\n    }, [base58]);\r\n\r\n    const openDropdown = useCallback(() => setActive(true), [setActive]);\r\n\r\n    const closeDropdown = useCallback(() => setActive(false), [setActive]);\r\n\r\n    const openModal = useCallback(() => {\r\n        setVisible(true);\r\n        closeDropdown();\r\n    }, [setVisible, closeDropdown]);\r\n\r\n    useEffect(() => {\r\n        const listener = (event: MouseEvent | TouchEvent) => {\r\n            const node = ref.current;\r\n\r\n            // Do nothing if clicking dropdown or its descendants\r\n            if (!node || node.contains(event.target as Node)) return;\r\n\r\n            closeDropdown();\r\n        };\r\n\r\n        document.addEventListener('mousedown', listener);\r\n        document.addEventListener('touchstart', listener);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', listener);\r\n            document.removeEventListener('touchstart', listener);\r\n        };\r\n    }, [ref, closeDropdown]);\r\n\r\n    if (!wallet) return <WalletModalButton {...props}>{children}</WalletModalButton>;\r\n    if (!base58) return <WalletConnectButton {...props}>{children}</WalletConnectButton>;\r\n\r\n    return (\r\n        <div className=\"wallet-adapter-dropdown\">\r\n            <Button\r\n                aria-expanded={active}\r\n                className=\"wallet-adapter-button-trigger\"\r\n                style={{ pointerEvents: active ? 'none' : 'auto', ...props.style }}\r\n                onClick={openDropdown}\r\n                startIcon={<WalletIcon wallet={wallet} />}\r\n                {...props}\r\n            >\r\n                {content}\r\n            </Button>\r\n            <ul\r\n                aria-label=\"dropdown-list\"\r\n                className={`wallet-adapter-dropdown-list ${active && 'wallet-adapter-dropdown-list-active'}`}\r\n                ref={ref}\r\n                role=\"menu\"\r\n            >\r\n                <li onClick={copyAddress} className=\"wallet-adapter-dropdown-list-item\" role=\"menuitem\">\r\n                    {copied ? 'Copied' : 'Copy address'}\r\n                </li>\r\n                <li onClick={openModal} className=\"wallet-adapter-dropdown-list-item\" role=\"menuitem\">\r\n                    Connect a different wallet\r\n                </li>\r\n                <li onClick={disconnect} className=\"wallet-adapter-dropdown-list-item\" role=\"menuitem\">\r\n                    Disconnect\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}