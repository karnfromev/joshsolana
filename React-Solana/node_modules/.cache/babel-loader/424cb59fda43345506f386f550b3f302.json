{"ast":null,"code":"import _regeneratorRuntime from\"D:/workspace/Webstrome/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/workspace/Webstrome/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// Import the functions you need from the SDKs you need\nimport{initializeApp}from'firebase/app';import\"firebase/analytics\";import\"firebase/auth\";import{getDatabase,ref,set,child,get}from\"firebase/database\";// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig={apiKey:\"AIzaSyAZjuhDPmon1DnzRutD9a9YrlDxllu0mQQ\",authDomain:\"solana-30d78.firebaseapp.com\",databaseURL:\"https://solana-30d78-default-rtdb.firebaseio.com\",projectId:\"solana-30d78\",storageBucket:\"solana-30d78.appspot.com\",messagingSenderId:\"516735150719\",appId:\"1:516735150719:web:3ac592ff811e4d21022d4a\",measurementId:\"G-2FQW03CHT6\"};var app=initializeApp(firebaseConfig);var db=getDatabase(app);var dbRef=ref(db);export function SendData(_x,_x2,_x3){return _SendData.apply(this,arguments);}function _SendData(){_SendData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(UserName,Password,Address){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"Sending\");_context.next=3;return set(ref(db,'users/'+UserName),{username:UserName,Password:Password,Address:Address}).then(function(){console.log(\"Sending Completed\");}).catch(function(error){console.log(\"error-->\"+error);});case 3:case\"end\":return _context.stop();}}},_callee);}));return _SendData.apply(this,arguments);}export function CheckData(_x4){return _CheckData.apply(this,arguments);}function _CheckData(){_CheckData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(UserName){var value;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:value=\"\";console.log(\"Checking\");_context2.next=4;return get(child(dbRef,\"users/\".concat(UserName))).then(function(snapshot){if(snapshot.exists()){console.log(snapshot.val());value=\"Data available\";return value;}else{value=\"No data available\";console.log(\"No data available\");return value;}}).catch(function(error){value=\"error\";return value;console.error(error);});case 4:return _context2.abrupt(\"return\",value);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _CheckData.apply(this,arguments);}","map":{"version":3,"sources":["D:/workspace/Webstrome/my-app/src/Firebase.tsx"],"names":["initializeApp","getDatabase","ref","set","child","get","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","dbRef","SendData","UserName","Password","Address","console","log","username","then","catch","error","CheckData","value","snapshot","exists","val"],"mappings":"qSAAA;AACA,OAAQA,aAAR,KAA4B,cAA5B,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,OAAQC,WAAR,CAAqBC,GAArB,CAA0BC,GAA1B,CAA+BC,KAA/B,CAAsCC,GAAtC,KAAgD,mBAAhD,CACA;AACA;AAEA;AACA;AACA,GAAMC,CAAAA,cAAc,CAAG,CACnBC,MAAM,CAAE,yCADW,CAEnBC,UAAU,CAAE,8BAFO,CAGnBC,WAAW,CAAE,kDAHM,CAInBC,SAAS,CAAE,cAJQ,CAKnBC,aAAa,CAAE,0BALI,CAMnBC,iBAAiB,CAAE,cANA,CAOnBC,KAAK,CAAE,2CAPY,CAQnBC,aAAa,CAAE,cARI,CAAvB,CAWA,GAAMC,CAAAA,GAAG,CAAGf,aAAa,CAACM,cAAD,CAAzB,CACA,GAAMU,CAAAA,EAAE,CAAGf,WAAW,CAACc,GAAD,CAAtB,CACA,GAAME,CAAAA,KAAK,CAAGf,GAAG,CAACc,EAAD,CAAjB,CAEA,eAAsBE,CAAAA,QAAtB,qD,uFAAO,iBAAwBC,QAAxB,CAA0CC,QAA1C,CAA4DC,OAA5D,kHACHC,OAAO,CAACC,GAAR,CAAY,SAAZ,EADG,sBAEGpB,CAAAA,GAAG,CAACD,GAAG,CAACc,EAAD,CAAK,SAAWG,QAAhB,CAAJ,CAA+B,CACpCK,QAAQ,CAAEL,QAD0B,CAEpCC,QAAQ,CAAEA,QAF0B,CAGpCC,OAAO,CAAEA,OAH2B,CAA/B,CAAH,CAIHI,IAJG,CAIE,UAAM,CACVH,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACH,CANK,EAMHG,KANG,CAMG,SAAAC,KAAK,CAAI,CACdL,OAAO,CAACC,GAAR,CAAY,WAAaI,KAAzB,EACH,CARK,CAFH,uD,2CAcP,eAAsBC,CAAAA,SAAtB,+C,yFAAO,kBAAyBT,QAAzB,gIACCU,KADD,CACS,EADT,CAEHP,OAAO,CAACC,GAAR,CAAY,UAAZ,EAFG,uBAGGlB,CAAAA,GAAG,CAACD,KAAK,CAACa,KAAD,iBAAiBE,QAAjB,EAAN,CAAH,CAAuCM,IAAvC,CAA4C,SAACK,QAAD,CAAc,CAC5D,GAAIA,QAAQ,CAACC,MAAT,EAAJ,CAAuB,CACnBT,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACE,GAAT,EAAZ,EACAH,KAAK,CAAG,gBAAR,CACA,MAAOA,CAAAA,KAAP,CACH,CAJD,IAIO,CACHA,KAAK,CAAG,mBAAR,CACAP,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACA,MAAOM,CAAAA,KAAP,CACH,CACJ,CAVK,EAUHH,KAVG,CAUG,SAACC,KAAD,CAAW,CAChBE,KAAK,CAAG,OAAR,CACA,MAAOA,CAAAA,KAAP,CACAP,OAAO,CAACK,KAAR,CAAcA,KAAd,EACH,CAdK,CAHH,yCAkBIE,KAlBJ,0D","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport {initializeApp} from 'firebase/app';\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport {getFirestore, collection, getDocs} from 'firebase/firestore/lite';\r\nimport {getDatabase, ref, set, child, get} from \"firebase/database\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAZjuhDPmon1DnzRutD9a9YrlDxllu0mQQ\",\r\n    authDomain: \"solana-30d78.firebaseapp.com\",\r\n    databaseURL: \"https://solana-30d78-default-rtdb.firebaseio.com\",\r\n    projectId: \"solana-30d78\",\r\n    storageBucket: \"solana-30d78.appspot.com\",\r\n    messagingSenderId: \"516735150719\",\r\n    appId: \"1:516735150719:web:3ac592ff811e4d21022d4a\",\r\n    measurementId: \"G-2FQW03CHT6\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getDatabase(app);\r\nconst dbRef = ref(db);\r\n\r\nexport async function SendData(UserName: string, Password: string, Address: string) {\r\n    console.log(\"Sending\");\r\n    await set(ref(db, 'users/' + UserName), {\r\n        username: UserName,\r\n        Password: Password,\r\n        Address: Address,\r\n    }).then(() => {\r\n        console.log(\"Sending Completed\");\r\n    }).catch(error => {\r\n        console.log(\"error-->\" + error);\r\n    });\r\n\r\n}\r\n\r\nexport async function CheckData(UserName: string) {\r\n    var value = \"\";\r\n    console.log(\"Checking\");\r\n    await get(child(dbRef, `users/${UserName}`)).then((snapshot) => {\r\n        if (snapshot.exists()) {\r\n            console.log(snapshot.val());\r\n            value = \"Data available\";\r\n            return value;\r\n        } else {\r\n            value = \"No data available\";\r\n            console.log(\"No data available\");\r\n            return value;\r\n        }\r\n    }).catch((error) => {\r\n        value = \"error\";\r\n        return value;\r\n        console.error(error);\r\n    });\r\n    return value;\r\n}"]},"metadata":{},"sourceType":"module"}