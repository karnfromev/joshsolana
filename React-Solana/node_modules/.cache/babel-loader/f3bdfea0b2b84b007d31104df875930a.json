{"ast":null,"code":"import{useWallet}from'@solana/wallet-adapter-react';import React,{useMemo}from'react';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export var WalletMulti=function WalletMulti(){var _useWallet=useWallet(),publicKey=_useWallet.publicKey;// get public key form the useWallett\nvar base58=useMemo(function(){return publicKey===null||publicKey===void 0?void 0:publicKey.toBase58();},[publicKey]);console.log(\"isConnected \"+localStorage.getItem(\"connected\"));if(localStorage.getItem(\"connected\")===\"false\"){localStorage.removeItem(\"address\");// Remove previous same address if disconnected button is pressed\n}else if(base58!==undefined&&localStorage.getItem(\"connected\")===\"true\"){localStorage.setItem(\"address\",base58+\"\");// set the address of the wallet if wallet is connected and base58 has wallet address\nconsole.log(base58);}return/*#__PURE__*/_jsx(_Fragment,{});};","map":{"version":3,"sources":["D:/workspace/Webstrome/my-app/src/WalletMulti.tsx"],"names":["useWallet","React","useMemo","WalletMulti","publicKey","base58","toBase58","console","log","localStorage","getItem","removeItem","undefined","setItem"],"mappings":"AAAA,OAAQA,SAAR,KAAwB,8BAAxB,CACA,MAAOC,CAAAA,KAAP,EAAeC,OAAf,KAA6B,OAA7B,C,gGAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAE7B,eAAoBH,SAAS,EAA7B,CAAOI,SAAP,YAAOA,SAAP,CAAiC;AACjC,GAAMC,CAAAA,MAAM,CAAGH,OAAO,CAAC,iBAAME,CAAAA,SAAN,SAAMA,SAAN,iBAAMA,SAAS,CAAEE,QAAX,EAAN,EAAD,CAA8B,CAACF,SAAD,CAA9B,CAAtB,CAEAG,OAAO,CAACC,GAAR,CAAY,eAAeC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAA3B,EAEA,GAAID,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAsC,OAA1C,CAAmD,CAC/CD,YAAY,CAACE,UAAb,CAAwB,SAAxB,EAAmC;AACtC,CAFD,IAIK,IAAIN,MAAM,GAAKO,SAAX,EAAwBH,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAsC,MAAlE,CAAyE,CAC1ED,YAAY,CAACI,OAAb,CAAqB,SAArB,CAA+BR,MAAM,CAAC,EAAtC,EAA0C;AAC1CE,OAAO,CAACC,GAAR,CAAYH,MAAZ,EACH,CAED,mBACI,kBADJ,CAIH,CApBM","sourcesContent":["import {useWallet} from '@solana/wallet-adapter-react';\r\nimport React, {useMemo} from 'react';\r\n\r\nexport const WalletMulti = () => {\r\n\r\n    const {publicKey} = useWallet(); // get public key form the useWallett\r\n    const base58 = useMemo(() => publicKey?.toBase58(), [publicKey]);\r\n\r\n    console.log(\"isConnected \"+localStorage.getItem(\"connected\"))\r\n\r\n    if (localStorage.getItem(\"connected\") === \"false\") {\r\n        localStorage.removeItem(\"address\") // Remove previous same address if disconnected button is pressed\r\n    }\r\n\r\n    else if (base58 !== undefined && localStorage.getItem(\"connected\") === \"true\"){\r\n        localStorage.setItem(\"address\",base58+\"\") // set the address of the wallet if wallet is connected and base58 has wallet address\r\n        console.log(base58)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}