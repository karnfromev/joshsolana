{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\Webstrome\\\\my-app\\\\src\\\\WalletDisconnetButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { Button } from '@solana/wallet-adapter-react-ui/src/Button';\nimport { WalletIcon } from '@solana/wallet-adapter-react-ui/src/WalletIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WalletDisconnectButton = ({\n  children,\n  disabled,\n  onClick,\n  ...props\n}) => {\n  _s();\n\n  const {\n    wallet,\n    disconnect,\n    disconnecting\n  } = useWallet();\n  const handleClick = useCallback(event => {\n    if (onClick) {\n      onClick(event);\n    } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n    if (!event.defaultPrevented) disconnect().catch(() => {});\n  }, [onClick, disconnect]);\n  const content = useMemo(() => {\n    if (children) return children;\n    if (disconnecting) return 'Disconnecting ...';\n    if (wallet) return 'Disconnect';\n    return 'Disconnect Wallet';\n  }, [children, disconnecting, wallet]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: \"wallet-adapter-button-trigger\",\n    disabled: disabled || !wallet,\n    startIcon: wallet ? /*#__PURE__*/_jsxDEV(WalletIcon, {\n      wallet: wallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }, this) : undefined,\n    onClick: handleClick,\n    ...props,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WalletDisconnectButton, \"TKJWtOZb1loS8CTsqA9BzSe78+k=\", false, function () {\n  return [useWallet];\n});\n\n_c = WalletDisconnectButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletDisconnectButton\");","map":{"version":3,"sources":["D:/workspace/Webstrome/my-app/src/WalletDisconnetButton.tsx"],"names":["useWallet","React","useCallback","useMemo","Button","WalletIcon","WalletDisconnectButton","children","disabled","onClick","props","wallet","disconnect","disconnecting","handleClick","event","defaultPrevented","catch","content","undefined"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,8BAA1B;AACA,OAAOC,KAAP,IAAuCC,WAAvC,EAAoDC,OAApD,QAAmE,OAAnE;AACA,SAASC,MAAT,QAAoC,4CAApC;AACA,SAASC,UAAT,QAA2B,gDAA3B;;AAEA,OAAO,MAAMC,sBAAuC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,OAAtB;AAA+B,KAAGC;AAAlC,CAAD,KAA+C;AAAA;;AAClG,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA;AAAtB,MAAwCb,SAAS,EAAvD;AAEA,QAAMc,WAAiD,GAAGZ,WAAW,CAChEa,KAAD,IAAW;AACP,QAAIN,OAAJ,EAAY;AACRA,MAAAA,OAAO,CAACM,KAAD,CAAP;AAAgB,KAFb,CAGP;;;AACA,QAAI,CAACA,KAAK,CAACC,gBAAX,EAA6BJ,UAAU,GAAGK,KAAb,CAAmB,MAAM,CAAE,CAA3B;AAChC,GANgE,EAOjE,CAACR,OAAD,EAAUG,UAAV,CAPiE,CAArE;AAWA,QAAMM,OAAO,GAAGf,OAAO,CAAC,MAAM;AAC1B,QAAII,QAAJ,EAAc,OAAOA,QAAP;AACd,QAAIM,aAAJ,EAAmB,OAAO,mBAAP;AACnB,QAAIF,MAAJ,EAAY,OAAO,YAAP;AACZ,WAAO,mBAAP;AACH,GALsB,EAKpB,CAACJ,QAAD,EAAWM,aAAX,EAA0BF,MAA1B,CALoB,CAAvB;AAOA,sBACI,QAAC,MAAD;AACI,IAAA,SAAS,EAAC,+BADd;AAEI,IAAA,QAAQ,EAAEH,QAAQ,IAAI,CAACG,MAF3B;AAGI,IAAA,SAAS,EAAEA,MAAM,gBAAG,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YAAH,GAAoCQ,SAHzD;AAII,IAAA,OAAO,EAAEL,WAJb;AAAA,OAKQJ,KALR;AAAA,cAOKQ;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAhCM;;GAAMZ,sB;UACqCN,S;;;KADrCM,sB","sourcesContent":["import { useWallet } from '@solana/wallet-adapter-react';\r\nimport React, { FC, MouseEventHandler, useCallback, useMemo } from 'react';\r\nimport { Button, ButtonProps } from '@solana/wallet-adapter-react-ui/src/Button';\r\nimport { WalletIcon } from '@solana/wallet-adapter-react-ui/src/WalletIcon';\r\n\r\nexport const WalletDisconnectButton: FC<ButtonProps> = ({ children, disabled, onClick, ...props }) => {\r\n    const { wallet, disconnect, disconnecting } = useWallet();\r\n\r\n    const handleClick: MouseEventHandler<HTMLButtonElement> = useCallback(\r\n        (event) => {\r\n            if (onClick){\r\n                onClick(event);}\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            if (!event.defaultPrevented) disconnect().catch(() => {});\r\n        },\r\n        [onClick, disconnect]\r\n\r\n    );\r\n\r\n    const content = useMemo(() => {\r\n        if (children) return children;\r\n        if (disconnecting) return 'Disconnecting ...';\r\n        if (wallet) return 'Disconnect';\r\n        return 'Disconnect Wallet';\r\n    }, [children, disconnecting, wallet]);\r\n\r\n    return (\r\n        <Button\r\n            className=\"wallet-adapter-button-trigger\"\r\n            disabled={disabled || !wallet}\r\n            startIcon={wallet ? <WalletIcon wallet={wallet} /> : undefined}\r\n            onClick={handleClick}\r\n            {...props}\r\n        >\r\n            {content}\r\n        </Button>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}