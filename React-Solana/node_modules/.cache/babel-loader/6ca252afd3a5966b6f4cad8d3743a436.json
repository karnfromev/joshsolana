{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\Webstrome\\\\my-app\\\\src\\\\Signup.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { CheckData } from \"./Firebase\";\nimport { Wallet } from \"./Wallet\";\nimport { Database } from './Database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.userData = {};\n    this.buttonName = \"\";\n    this.isPasswordAllocated = \"\";\n    this.state = {\n      show: true,\n      message: \"\",\n      color: \"\",\n      usernameAvailable: false,\n      passwordAvailable: false,\n      showWallet: true,\n      saveData: true,\n      disableButton: true\n    };\n\n    this.writeUserData = () => {\n      console.log(\"DATA SAVED\");\n    };\n\n    this.getUserData = () => {\n      console.log(\"DATA COLLECTED\");\n    };\n\n    this.onValueChange = (key, value) => {\n      this.userData[key] = value;\n    };\n  }\n\n  async isDataAvailable(username) {\n    const data = await CheckData(username);\n\n    if (data !== \"No data available\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  changeUI() {\n    this.setState({\n      show: !this.state.show\n    });\n    this.setState({\n      showWallet: !this.state.showWallet\n    });\n  }\n\n  changeMessage(msg, color) {\n    this.setState({\n      message: msg\n    });\n    this.setState({\n      color: color\n    });\n  }\n\n  onUpdate(event, message, color, checkAvailability) {\n    this.onValueChange(\"username\", event.target.value);\n    this.state.usernameAvailable = checkAvailability;\n    this.changeMessage(message, color);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Solana Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.show ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"username\",\n              type: \"text\",\n              placeholder: \"Enter username\",\n              onChange: async evt => {\n                if (evt.target.value === '') {\n                  this.onUpdate(evt, \"\", \"#000000\", false);\n                  return;\n                }\n\n                if (await this.isDataAvailable(evt.target.value)) {\n                  this.onUpdate(evt, \"Username is not available\", \"#ff0000\", false);\n                } else {\n                  this.onUpdate(evt, \"Username is available\", \"#00ff00\", true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                color: this.state.color\n              },\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              placeholder: \"Enter password\",\n              onChange: evt => {\n                this.onValueChange(\"password\", evt.target.value);\n                this.isPasswordAllocated = evt.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"own\",\n              onClick: () => {\n                if (this.state.usernameAvailable && this.isPasswordAllocated !== \"\") {\n                  this.changeUI(); // Address Connect\n\n                  localStorage.setItem(\"username\", this.userData[\"username\"]);\n                  localStorage.setItem(\"password\", this.userData[\"password\"]);\n                  localStorage.removeItem(\"address\");\n                } else {//No\n                }\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this) : !this.state.showWallet ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Wallet, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"own\",\n              onClick: () => {\n                this.setState({\n                  showWallet: !this.state.showWallet\n                });\n                this.setState({\n                  saveData: !this.state.saveData\n                });\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 37\n          }, this) : !this.state.saveData ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Database, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["D:/workspace/Webstrome/my-app/src/Signup.tsx"],"names":["React","CheckData","Wallet","Database","Signup","Component","userData","buttonName","isPasswordAllocated","state","show","message","color","usernameAvailable","passwordAvailable","showWallet","saveData","disableButton","writeUserData","console","log","getUserData","onValueChange","key","value","isDataAvailable","username","data","changeUI","setState","changeMessage","msg","onUpdate","event","checkAvailability","target","render","evt","localStorage","setItem","removeItem"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport {CheckData, SendData} from \"./Firebase\";\r\nimport {Wallet} from \"./Wallet\";\r\n\r\n\r\nimport {\r\n    Database\r\n} from './Database'\r\n\r\n\r\nclass Signup extends React.Component {\r\n\r\n\r\n    private userData: any = {};\r\n    private buttonName: string = \"\"\r\n    private isPasswordAllocated: string = \"\";\r\n\r\n\r\n    async isDataAvailable(username: string) {\r\n        const data = await CheckData(username);\r\n        if (data !== \"No data available\") {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    state = {\r\n        show: true,\r\n        message: \"\",\r\n        color: \"\",\r\n        usernameAvailable: false,\r\n        passwordAvailable: false,\r\n        showWallet: true,\r\n        saveData: true,\r\n        disableButton : true\r\n    };\r\n\r\n\r\n    writeUserData = () => {\r\n        console.log(\"DATA SAVED\");\r\n    };\r\n\r\n    getUserData = () => {\r\n        console.log(\"DATA COLLECTED\");\r\n    };\r\n\r\n    changeUI() {\r\n        this.setState({show: !this.state.show});\r\n        this.setState({showWallet: !this.state.showWallet});\r\n    }\r\n\r\n    changeMessage(msg: string, color: string) {\r\n        this.setState({message: msg});\r\n        this.setState({color: color});\r\n\r\n    }\r\n\r\n    onValueChange = (key: string, value: string) => {\r\n        this.userData[key] = value;\r\n    }\r\n\r\n    onUpdate(event: any, message: string, color: string, checkAvailability: boolean) {\r\n        this.onValueChange(\"username\", event.target.value)\r\n        this.state.usernameAvailable = checkAvailability;\r\n        this.changeMessage(message, color)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1>Solana Wallet</h1>\r\n                    <div>\r\n                        {\r\n                            this.state.show ?\r\n                                <div>\r\n                                    <input id=\"username\"\r\n                                           type=\"text\"\r\n                                           placeholder=\"Enter username\"\r\n                                           onChange={\r\n                                               async (evt) => {\r\n\r\n                                                   if (evt.target.value === '') {\r\n                                                       this.onUpdate(evt, \"\", \"#000000\", false)\r\n                                                       return\r\n                                                   }\r\n\r\n                                                   if (await this.isDataAvailable(evt.target.value)) {\r\n                                                       this.onUpdate(evt, \"Username is not available\", \"#ff0000\", false)\r\n                                                   } else {\r\n                                                       this.onUpdate(evt, \"Username is available\", \"#00ff00\", true)\r\n                                                   }\r\n                                               }\r\n                                           }/>\r\n                                    <br/>\r\n                                    <a style={\r\n                                        {\r\n                                            color: this.state.color\r\n                                        }\r\n                                    }>\r\n                                        {this.state.message}\r\n                                    </a>\r\n\r\n                                    <br/><br/>\r\n\r\n                                    <input id=\"password\"\r\n                                           type=\"password\"\r\n                                           placeholder=\"Enter password\"\r\n                                           onChange={\r\n                                               (evt) => {\r\n                                                   this.onValueChange(\"password\", evt.target.value)\r\n                                                   this.isPasswordAllocated = evt.target.value;\r\n                                               }\r\n                                           }\r\n                                    />\r\n                                    <br/><br/>\r\n                                    <button\r\n                                        id=\"own\"\r\n                                        onClick={\r\n                                            () => {\r\n                                                if (this.state.usernameAvailable && this.isPasswordAllocated !== \"\") {\r\n                                                    this.changeUI(); // Address Connect\r\n                                                    localStorage.setItem(\"username\", this.userData[\"username\"])\r\n                                                    localStorage.setItem(\"password\", this.userData[\"password\"])\r\n                                                    localStorage.removeItem(\"address\");\r\n                                                } else {\r\n                                                    //No\r\n                                                }\r\n\r\n                                            }\r\n                                        }>\r\n                                        Sign Up\r\n                                    </button>\r\n\r\n                                </div> :\r\n                                !this.state.showWallet ?\r\n                                    <div>\r\n                                        <Wallet/>\r\n                                        <br/>\r\n                                        <button id=\"own\"\r\n                                            onClick={() => {\r\n                                            this.setState({showWallet: !this.state.showWallet});\r\n                                            this.setState({saveData: !this.state.saveData});\r\n                                        }\r\n                                    }>\r\n                                        Save\r\n                                    </button>\r\n                            </div>\r\n                            : !this.state.saveData ?\r\n                            <div>\r\n                            <Database/>\r\n                            </div> : null\r\n\r\n                        }\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}