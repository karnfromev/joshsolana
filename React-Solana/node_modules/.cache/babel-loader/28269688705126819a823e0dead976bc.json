{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\Webstrome\\\\my-app\\\\src\\\\Signup.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { CheckData } from \"./Firebase\";\nimport { Wallet } from \"./Wallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.userData = {};\n    this.state = {\n      show: true,\n      message: \"\",\n      color: \"\",\n      usernameAvailable: false,\n      passwordAvailable: false,\n      showWallet: false\n    };\n\n    this.writeUserData = () => {\n      console.log(\"DATA SAVED\");\n    };\n\n    this.getUserData = () => {\n      console.log(\"DATA COLLECTED\");\n    };\n\n    this.onValueChange = (key, value) => {\n      this.userData[key] = value;\n    };\n  }\n\n  async isDataAvailable(username) {\n    const data = await CheckData(username);\n\n    if (data !== \"No data available\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  changeUI() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  changeMessage(msg, color) {\n    this.setState({\n      message: msg\n    });\n    this.setState({\n      color: color\n    });\n  }\n\n  onUpdate(event, message, color, checkAvailability) {\n    this.onValueChange(\"username\", event.target.value);\n    this.state.usernameAvailable = checkAvailability;\n    this.changeMessage(message, color);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Solana Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.show ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"username\",\n              type: \"text\",\n              placeholder: \"Enter username\",\n              onChange: async evt => {\n                if (evt.target.value === '') {\n                  this.onUpdate(evt, \"\", \"#000000\", false);\n                  return;\n                }\n\n                if (await this.isDataAvailable(evt.target.value)) {\n                  this.onUpdate(evt, \"Username is not available\", \"#ff0000\", false);\n                } else {\n                  this.onUpdate(evt, \"Username is available\", \"#00ff00\", true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                color: this.state.color\n              },\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              placeholder: \"Enter password\",\n              onChange: evt => {\n                this.onValueChange(\"password\", evt.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (this.state.usernameAvailable) {\n                  this.changeUI(); // Address Connect\n\n                  this.setState({\n                    showWallet: !this.state.showWallet\n                  });\n\n                  for (let [key, value] of Object.entries(this.userData)) {\n                    console.log(key + \" --> \" + value); // get id and password of the user\n                  }\n\n                  localStorage.setItem(\"username\", this.userData[\"username\"]);\n                  localStorage.setItem(\"password\", this.userData[\"password\"]);\n                } else {//No\n                }\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this) : this.state.showWallet ? /*#__PURE__*/_jsxDEV(Wallet, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 37\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["D:/workspace/Webstrome/my-app/src/Signup.tsx"],"names":["React","CheckData","Wallet","Signup","Component","userData","state","show","message","color","usernameAvailable","passwordAvailable","showWallet","writeUserData","console","log","getUserData","onValueChange","key","value","isDataAvailable","username","data","changeUI","setState","changeMessage","msg","onUpdate","event","checkAvailability","target","render","evt","Object","entries","localStorage","setItem"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport {CheckData, SendData} from \"./Firebase\";\r\nimport {Wallet} from \"./Wallet\";\r\n\r\nclass Signup extends React.Component {\r\n\r\n    private userData: any = {};\r\n\r\n\r\n\r\n    async isDataAvailable(username: string) {\r\n        const data = await CheckData(username);\r\n        if (data !== \"No data available\") {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    state = {\r\n        show: true,\r\n        message: \"\",\r\n        color: \"\",\r\n        usernameAvailable: false,\r\n        passwordAvailable: false,\r\n        showWallet: false\r\n    };\r\n\r\n\r\n    writeUserData = () => {\r\n        console.log(\"DATA SAVED\");\r\n    };\r\n\r\n    getUserData = () => {\r\n        console.log(\"DATA COLLECTED\");\r\n    };\r\n\r\n    changeUI() {\r\n        this.setState({show: !this.state.show});\r\n    }\r\n\r\n    changeMessage(msg: string, color: string) {\r\n        this.setState({message: msg});\r\n        this.setState({color: color});\r\n\r\n    }\r\n\r\n    onValueChange = (key: string, value: string) => {\r\n        this.userData[key] = value;\r\n    }\r\n\r\n    onUpdate(event: any, message: string, color: string, checkAvailability: boolean) {\r\n        this.onValueChange(\"username\",event.target.value)\r\n        this.state.usernameAvailable = checkAvailability;\r\n        this.changeMessage(message, color)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1>Solana Wallet</h1>\r\n                    <div>\r\n                        {\r\n                            this.state.show ?\r\n                                <div>\r\n                                    <input id=\"username\"\r\n                                           type=\"text\"\r\n                                           placeholder=\"Enter username\"\r\n                                           onChange={\r\n                                               async (evt) => {\r\n\r\n                                                   if (evt.target.value === '') {\r\n                                                       this.onUpdate(evt, \"\", \"#000000\", false)\r\n                                                       return\r\n                                                   }\r\n\r\n                                                   if (await this.isDataAvailable(evt.target.value)) {\r\n                                                       this.onUpdate(evt, \"Username is not available\", \"#ff0000\", false)\r\n                                                   } else {\r\n                                                       this.onUpdate(evt, \"Username is available\", \"#00ff00\", true)\r\n                                                   }\r\n                                               }\r\n                                           }/>\r\n                                    <br/>\r\n                                    <a style={\r\n                                        {\r\n                                            color: this.state.color\r\n                                        }\r\n                                    }>\r\n                                        {this.state.message}\r\n                                    </a>\r\n\r\n                                    <br/><br/>\r\n\r\n                                    <input id=\"password\"\r\n                                           type=\"password\"\r\n                                           placeholder=\"Enter password\"\r\n                                           onChange={\r\n                                               (evt) => {\r\n                                                   this.onValueChange(\"password\", evt.target.value)\r\n                                               }\r\n                                           }\r\n                                    />\r\n                                    <br/><br/>\r\n                                    <button\r\n                                        onClick={\r\n                                            () => {\r\n                                                if (this.state.usernameAvailable) {\r\n                                                    this.changeUI(); // Address Connect\r\n                                                    this.setState({showWallet: !this.state.showWallet});\r\n                                                    for (let [key, value] of Object.entries(this.userData)) {\r\n                                                        console.log(key + \" --> \" + value) // get id and password of the user\r\n                                                    }\r\n                                                    localStorage.setItem(\"username\",this.userData[\"username\"])\r\n                                                    localStorage.setItem(\"password\",this.userData[\"password\"])\r\n                                                } else {\r\n                                                    //No\r\n                                                }\r\n\r\n                                            }\r\n                                        }>\r\n                                        Sign Up\r\n                                    </button>\r\n\r\n                                </div> :\r\n                                this.state.showWallet ?\r\n                                    <Wallet/> : null\r\n\r\n                        }\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}